name: Go

on:
  push:
    branches: main
  pull_request:
    branches: main

env:
  GOLANG: 1.18

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GOLANG }}
      - name: Setup lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.47.3
      - name: Lint and automate clean up
        run: make clean && go install ./... && go test ./...
      - name: Check and push changes
        run: |
          export NAME=$(git log -n 1 --pretty=format:%an)
          export EMAIL=$(git log -n 1 --pretty=format:%ae)
          git config user.name "NAME"
          git config user.email "$EMAIL"
          if git diff-index --quiet HEAD --; then
            git add -A
            git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
            git commit -am "style: automated go lint ./... && go fmt ./..."
            git push
          fi
  gitactions:
    needs: format
    strategy:
      matrix:
        OS: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.OS }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GOLANG }}
      - name: Install
        run: make install
      - name: Test
        if: matrix.OS == 'ubuntu-latest' || matrix.OS == 'macos-latest'
        run: make test
      - name: Coverage
        if: matrix.OS == 'ubuntu-latest'
        run: go test -coverprofile=coverage.txt -covermode=atomic ./...
      - name: Upload
        if: matrix.OS == 'ubuntu-latest'
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          files: coverage.txt
          verbose: true
