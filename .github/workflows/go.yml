name: Go

on:
  push:
    branches: main
  pull_request:
    branches: main

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '1.18'
      - name: Build
        run:
          mkdir --parents /home/runner/go/src/github.com/vertgenlab/ &&
          cp -r ../gonomics /home/runner/go/src/github.com/vertgenlab/ &&
          cd /home/runner/go/src/github.com/vertgenlab/gonomics &&
          go build ./...

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '1.18'
      - name: Test
        run: |
          mkdir --parents /home/runner/go/src/github.com/vertgenlab/ &&
          cp -r ../gonomics /home/runner/go/src/github.com/vertgenlab/ &&
          cd /home/runner/go/src/github.com/vertgenlab/gonomics &&
          go install ./... &&
          go test ./...
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
      - uses: actions/setup-go@v4
        with:
          go-version: '1.18'
      - name: go fmt
        run: gofmt -s -w ./*/*.go
      - name: go fmt cmd
        run: gofmt -s -w ./cmd/*/*.go
      - name: Check for modified files
        id: git-check
        run: echo ::set-output name=modified::$(if git diff-index --quiet HEAD --; then echo "false"; else echo "true"; fi)
      - name: Push changes
        if: steps.git-check.outputs.modified == 'true'
        run: |
          git config --global user.email "AutoFmtBot@fmtyacodeffs.com"
          git config --global user.name "AutoFmt Bot"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git commit -am "Automated go fmt"
          git push
  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - uses: actions/setup-go@v4
        with:
          go-version: '1.18'
      - name: Run coverage
        run:
          mkdir --parents /home/runner/go/src/github.com/vertgenlab/ &&
          cp -r ../gonomics /home/runner/go/src/github.com/vertgenlab/ &&
          cd /home/runner/go/src/github.com/vertgenlab/gonomics &&
          go install ./... &&
          go test -coverprofile=coverage.txt -covermode=atomic ./...
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          files: /home/runner/go/src/github.com/vertgenlab/gonomics/coverage.txt
          verbose: true
